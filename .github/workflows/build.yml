name: Build
on:
  push:
    branches: [ "**" ]
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 17 ]
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      
      - name: Build
        run: ./gradlew build
      
      - name: Extract Version Name
        id: extract_version
        run: |
          JAR_FILE=$(find build/libs -name 'AxiomPaper-*.jar' | head -n 1)
          VERSION=${JAR_FILE##*-}
          VERSION=${VERSION%.jar}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false
      
      - name: Get Recent Release
        id: check_assets
        run: |
          ASSETS_URL="https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets"
          ASSET_RESPONSE=$(curl -H "Authorization: token ${{ secrets.TOKEN }}" -s $ASSETS_URL)
          MATCHED_ASSET=$(echo "$ASSET_RESPONSE" | jq -c '.[] | select(.name == "AxiomPaper-'${{ steps.extract_version.outputs.version }}'.jar")')
          echo "MATCHED_ASSET=$MATCHED_ASSET" >> $GITHUB_ENV
      
      - name: Override Previous Release
        id: delete_asset
        run: |
          ASSET_ID=$(echo "${{ env.MATCHED_ASSET }}" | jq -r '.id // "null"')
          if [ "$ASSET_ID" != "null" ]; then
            curl -X DELETE -H "Authorization: token ${{ secrets.TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/assets/$ASSET_ID"
          fi
      
      - name: Upload JAR
        id: upload_jar
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/AxiomPaper-${{ steps.extract_version.outputs.version }}.jar
          asset_name: AxiomPaper-${{ steps.extract_version.outputs.version }}.jar
          asset_content_type: application/java-archive
